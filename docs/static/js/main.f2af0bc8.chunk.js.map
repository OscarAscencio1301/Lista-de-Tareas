{"version":3,"sources":["hooks/reducer.js","components/ListaTareas.js","hooks/useForm.js","index.js"],"names":["reducer","state","action","type","payload","filter","todos","id","map","todo","done","init","JSON","parse","localStorage","getItem","ListaTareas","useReducer","tareas","dispatch","valoresInicales","useState","valores","setvalores","e","target","name","value","useForm","descripcion","cambioValores","reset","useEffect","setItem","stringify","className","length","tarea","ind","onClick","tareaId","onSubmit","preventDefault","nuevaTarea","Date","now","trim","onChange","ReactDOM","render","document","getElementById"],"mappings":"+LAAaA,EAAU,WAAwB,IAAvBC,EAAsB,uDAAd,GAAIC,EAAU,uCAC1C,OAAQA,EAAOC,MACX,IAAK,UACH,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,UACzB,IAAK,SACH,OAAOH,EAAMI,QAAO,SAAAC,GAAK,OAAIA,EAAMC,KAAOL,EAAOE,WACnD,IAAK,WACH,OAAOH,EAAMO,KAAI,SAAAC,GAAI,OAAIA,EAAKF,KAAOL,EAAOE,QAAnB,2BAAiCK,GAAjC,IAAuCC,MAAOD,EAAKC,OAAOD,KAEvF,QACI,OAAOR,I,cCNbU,EAAO,WACb,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,IAKxCC,EAAc,WAEvB,MAA2BC,qBAAWjB,EAAS,GAAIW,GAAnD,mBAAOO,EAAP,KAAeC,EAAf,KACA,ECVmB,WAA2B,IAA1BC,EAAyB,uDAAP,GACxC,EAA8BC,mBAASD,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAcE,MAAO,CAACD,EAZc,SAACE,GACnBD,EAAW,2BACJD,GADG,kBAELE,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAKpB,WACVJ,EAAWH,KDF+BQ,CAAQ,CAClDC,YAAa,KADjB,mBAAQA,EAAR,KAAQA,YAAcC,EAAtB,KAAqCC,EAArC,KAGAC,qBAAU,WACNlB,aAAamB,QAAQ,SAAUrB,KAAKsB,UAAUhB,MAC/C,CAACA,IAqCJ,OACI,gCACI,oBAAIiB,UAAU,cAAd,8BACA,uBACA,sBAAKA,UAAU,OAAf,UACA,sBAAKA,UAAU,QAAf,UACI,mDAAsBjB,EAAOkB,OAA7B,OACA,uBACA,oBAAID,UAAU,aAAd,SAGQjB,EAAOV,KAAI,SAAC6B,EAAOC,GAAR,OAAgB,qBAAIH,UAAU,kBAAd,UAE1B,oBACGI,QAAS,kBAtBPC,EAsB6BH,EAAM9B,QAjBxDY,EAJe,CACXhB,KAAM,WACNC,QAASoC,IAHO,IAACA,GAuBFL,UAAS,WAAoB,IAAfE,EAAM3B,KAAgB,aAAe,MAFtD,UAGI4B,EAAM,EAHV,KAGeD,EAAMA,SACtB,wBACIF,UAAU,iBACVI,QAAS,kBAlCXC,EAkC6BH,EAAM9B,QA7BpDY,EAJe,CACXhB,KAAM,SACNC,QAASoC,IAHG,IAACA,GAgCF,sBALKH,EAAM9B,YAevB,sBAAK4B,UAAU,QAAf,UACA,+CACA,uBACI,uBAAMM,SAhEG,SAACjB,GAClBA,EAAEkB,iBACF,IAAMC,EAAa,CACfpC,GAAIqC,KAAKC,MACTR,MAAOR,EACPnB,MAAM,GAGJR,EAAS,CACXC,KAAM,UACNC,QAASuC,GAGXA,EAAWN,MAAMS,OAAOV,QAAU,IACpCjB,EAASjB,GACT6B,MAiDQ,UACI,uBACI5B,KAAK,OACLuB,KAAK,cACLC,MAAOE,EACPkB,SAAUjB,IAEd,wBACI3B,KAAK,SACLgC,UAAU,qCAFd,kC,MEtFpBa,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.f2af0bc8.chunk.js","sourcesContent":["export const reducer = (state = [], action) =>{\r\n    switch (action.type) {\r\n        case \"agregar\":\r\n          return [...state, action.payload]  \r\n          case \"borrar\":\r\n            return state.filter(todos => todos.id !== action.payload) \r\n          case 'completo':\r\n            return state.map(todo => todo.id === action.payload ? {...todo, done: !todo.done}: todo)\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n \r\n}","import React, { useEffect, useReducer } from 'react'\r\nimport { reducer } from '../hooks/reducer'\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nconst init = () => {\r\nreturn JSON.parse(localStorage.getItem(\"tareas\")) || []\r\n}\r\n\r\n\r\n\r\nexport const ListaTareas = () => {\r\n\r\n    const [tareas, dispatch] = useReducer(reducer, [], init)\r\n    const [{descripcion}, cambioValores, reset] = useForm({\r\n        descripcion: ''\r\n    })\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tareas\", JSON.stringify(tareas) )\r\n    }, [tareas])\r\n   \r\n    \r\n    const agregarTarea = (e) =>{\r\n        e.preventDefault();\r\n        const nuevaTarea = {\r\n            id: Date.now(),\r\n            tarea: descripcion,\r\n            done: false\r\n        }\r\n\r\n        const action = {\r\n            type: 'agregar',\r\n            payload: nuevaTarea\r\n        }\r\n\r\n       if(nuevaTarea.tarea.trim().length >= 3){\r\n        dispatch(action)\r\n        reset();\r\n       }\r\n       \r\n    }\r\n     const borrarTarea = (tareaId) => {\r\n         const action = {\r\n             type: 'borrar',\r\n             payload: tareaId\r\n         }\r\n         dispatch(action)\r\n     }\r\n     const tareaCompletada = (tareaId) => {\r\n         const action = {\r\n             type: 'completo',\r\n             payload: tareaId\r\n         }\r\n         dispatch(action)\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">App Lista Tareas</h1>\r\n            <hr />\r\n            <div className=\"flex\">\r\n            <div className=\"item1\">\r\n                <h4>Tareas Totales: ({tareas.length})</h4>\r\n                <hr />\r\n                <ol className=\"list-group\">\r\n                    \r\n                    {\r\n                        tareas.map((tarea, ind) => <li className=\"list-group-item\"\r\n                        key={tarea.id}>\r\n                         <p \r\n                            onClick={() => tareaCompletada(tarea.id)} \r\n                            className={`${tarea.done === true ? 'completada' : null}`}>\r\n                            {ind + 1}. {tarea.tarea}</p>\r\n                        <button \r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => borrarTarea(tarea.id)}\r\n                            >Borrar</button>\r\n                        </li>)\r\n\r\n                    }\r\n                    \r\n                </ol>\r\n            </div>\r\n            <div className=\"item2\">\r\n            <h4>Agregar Tarea</h4>\r\n            <hr />\r\n                <form onSubmit={agregarTarea}>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"descripcion\"\r\n                        value={descripcion}\r\n                        onChange={cambioValores}\r\n                    />\r\n                    <button \r\n                        type=\"submit\"\r\n                        className=\"d-block w-100 btn btn-primary my-3\"\r\n                        >Agregar</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (valoresInicales = {}) => {\r\n  const [valores, setvalores] = useState(valoresInicales)\r\n\r\n    const cambioValores = (e) =>{\r\n        setvalores({\r\n            ...valores,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n    }\r\n\r\n    const reset = () =>{\r\n        setvalores(valoresInicales)\r\n    }\r\n\r\n    return [valores, cambioValores, reset]\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ListaTareas } from './components/ListaTareas';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <ListaTareas />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}